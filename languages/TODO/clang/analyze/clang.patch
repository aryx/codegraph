diff --git a/lib/AST/ASTDumper.cpp b/lib/AST/ASTDumper.cpp
index 6248da0..9d8cad4 100644
--- a/lib/AST/ASTDumper.cpp
+++ b/lib/AST/ASTDumper.cpp
@@ -105,12 +105,12 @@ namespace  {
     public:
       ColorScope(ASTDumper &Dumper, TerminalColor Color)
         : Dumper(Dumper) {
-        if (Dumper.ShowColors)
-          Dumper.OS.changeColor(Color.Color, Color.Bold);
+        //if (Dumper.ShowColors)
+          //Dumper.OS.changeColor(Color.Color, Color.Bold);
       }
       ~ColorScope() {
-        if (Dumper.ShowColors)
-          Dumper.OS.resetColor();
+        //if (Dumper.ShowColors)
+          //Dumper.OS.resetColor();
       }
     };
 
@@ -306,11 +306,11 @@ void ASTDumper::dumpPointer(const void *Ptr) {
 
 void ASTDumper::dumpLocation(SourceLocation Loc) {
   ColorScope Color(*this, LocationColor);
-  SourceLocation SpellingLoc = SM->getSpellingLoc(Loc);
+  SourceLocation ExpansionLoc = SM->getExpansionLoc(Loc);
 
   // The general format we print out is filename:line:col, but we drop pieces
   // that haven't changed since the last loc printed.
-  PresumedLoc PLoc = SM->getPresumedLoc(SpellingLoc);
+  PresumedLoc PLoc = SM->getPresumedLoc(ExpansionLoc);
 
   if (PLoc.isInvalid()) {
     OS << "<invalid sloc>";
@@ -318,8 +318,15 @@ void ASTDumper::dumpLocation(SourceLocation Loc) {
   }
 
   if (strcmp(PLoc.getFilename(), LastLocFilename) != 0) {
-    OS << PLoc.getFilename() << ':' << PLoc.getLine()
+    const char* f = PLoc.getFilename();
+    char* f2 = realpath(f, NULL);
+    const char* f3 = f2 ? f2 : f;
+    OS << f3 << ':' << PLoc.getLine()
        << ':' << PLoc.getColumn();
+    if(f2 == NULL) {
+    } else {
+      free(f2);
+    }
     LastLocFilename = PLoc.getFilename();
     LastLocLine = PLoc.getLine();
   } else if (PLoc.getLine() != LastLocLine) {
